@page
@model webclinic.Pages.DrProfileModel
@{
    ViewData["Title"] = "Doctor Profile";
    Layout = ".\\Shared\\_Layout.cshtml";
}



<div class="header-inner">
            <div class="container">
                <div class="inner">
                    <div class="row">
                        <div class="col-lg-3 col-md-3 col-12">
                            <div class="logo">
                                <a href="index"><img src="img/logo.png" alt="#"></a>
                            </div>
                            <div class="mobile-nav"></div>
                        </div>
                        <div class="col-lg-7 col-md-9 col-12">
                            <div class="main-menu">
                                <nav class="navigation">
                                    <ul class="nav menu">
                                        <li><a href="index">Home</a></li>
                                    </ul>
                                </nav>
                            </div>
                        </div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
<!-- Breadcrumbs -->
<div class="breadcrumbs overlay">
    <div class="container">
        <div class="bread-inner">
            <div class="row">
                <div class="col-12">
                    <h2>My Profile</h2>
                    <ul class="bread-list">
                        <li><a href="Index">Home</a></li>
                        <li><i class="icofont-simple-right"></i></li>
                        <li class="active">My Profile</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Breadcrumbs -->



<div class="container my-5">
    <!-- Profile Section -->
    <div class="row mb-5 align-items-center">
        <div class="col-md-3 text-center">
            <img src="@Model.DoctorImage" alt="Doctor's Profile Image" class="rounded-circle" style="width: 180px; height: 180px;" />
        </div>
        <div class="col-md-9">
            <h2>@Model.DoctorName</h2>
            <p class="text-muted">@Model.Specialization</p>
            <div class="ratings mb-3">
                <p><strong>Rating:</strong> @Model.Rating/5</p>
                <p><strong>Patients Treated:</strong> @Model.PatientsTreated</p>
                @if (HttpContext.Session.GetString("user_type") == "a")
				{
					<span class="badge text-white @(Model.IsActivated ? "bg-success" : "bg-warning text-dark")">
							@(Model.IsActivated ? "Active" : "Banned")
					</span>
					<span class="badge text-white @(Model.IsVerified ? "bg-success" : "bg-warning text-dark")">
							@(Model.IsVerified ? "Verified" : "Unverified")
					</span>

                    @if(!string.IsNullOrEmpty(@Model.natIDPic))
                    {
						<a class="badge text-white bg-primary" href="@Model.natIDPic" target="_blank">View National ID</a>
                    }
                    @if(!string.IsNullOrEmpty(@Model.docCertPic))
                    {
						<a class="badge text-white bg-primary" href="@Model.docCertPic" target="_blank">View Medical Cert.</a>
                    }

				}

            </div>

            <p>Age: @Model.Age</p>
        </div>
    </div>
    @if (HttpContext.Session.GetString("user_type") == "a")
    {
    <div class="d-flex justify-content-end gap-5">
        <form method="post" asp-page-handler="ToggleStatus">
            <button type="submit" class="btn @(Model.IsActivated ? "btn-danger" : "btn-success") btn-lg px-4">
                    @(Model.IsActivated ? "Ban" : "Activate")
            </button>
        </form>

        <form method="post" asp-page-handler="ToggleSSSN">
            <button type="submit" class="btn @(Model.IsVerified ? "btn-danger" : "btn-success") btn-lg px-4">
                    @(Model.IsVerified ? "Unverify" : "Verify")
            </button>
        </form>
    </div>




    }
    <!-- Education Section -->
    <div class="mb-5">
        <h5 class="mb-3">Education 
            <button href="#" data-toggle="modal" data-target="#ppaModal" class="ms-2 text-decoration-none">✎</button>
        </h5>
        <div class="row g-3">
            @for (int i = 0; i < Model.education.Rows.Count; i++)
            {
                <div class="col-md-6">
                    <div class="p-3 border rounded">
                                    <h6 class="mb-1">@Model.education.Rows[i]["Institute"].ToString()</h6>
                                <p class="text-muted">@Model.education.Rows[i]["Description"].ToString()</p>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Experience Section -->
    <div class="mb-5">
        <h5 class="mb-3">Experience 
            <a href="#" class="ms-2 text-decoration-none">✎</a>
        </h5>
        <div class="row g-3">
            @for (int i = 0; i < Model.experiance.Rows.Count; i++)
            {
                <div class="col-md-6">
                    <div class="p-3 border rounded">
                                <h6 class="mb-1">@Model.experiance.Rows[i]["Institution"].ToString()</h6>
                                <p class="text-muted">@Model.experiance.Rows[i]["JobPosition"].ToString()</p>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Clinic Section -->
    <div class="mb-5">
        <h5 class="mb-3">Clinic Details 
            <a href="#" class="ms-2 text-decoration-none">✎</a>
        </h5>
        <div class="row">
            <div class="col-md-12">
                <p><strong>@Model.ClinicDetails.Rows[0]["Institution"].ToString()</strong></p>
                <p>@Model.ClinicDetails.Rows[0]["address"].ToString()</p>
            </div>
        </div>
    </div>


   
<!-- Booking Information Section -->
    <div class="row mb-5">
        <div class="col-md-6">
            <div class="p-4 border rounded">
                <h5 class="mb-3">Booking Information 
					<button class="btn btn-outline-secondary time-slot-btn"
					@if (HttpContext.Session.GetString("user_type") == "d")
					{
						@:data-toggle="modal"
					}
							data-target="#ppaModal">✎</button>
                </h5>
                <p class="h4 text-primary">@Model.Fee</p>
            </div>
        </div>
        

        <div class="col-md-6">
            </div>
        </div>
        <!-- Add Dates and Available Times Table -->
<div class="mb-3">
    <p class="text-muted">Add Dates and Available Times</p>
    <hr class="my-2">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">Date</th>
                <th scope="col">Available Times</th>
            </tr>
        </thead>
        <tbody>
                @for (int i = 0; i < Model.dates.Rows.Count; i++)
                {
                    DateTime dateValue = Convert.ToDateTime(Model.dates.Rows[i]["date"]);
    <tr>
        <td>@dateValue.ToString("MM/dd dddd")</td>
        <td>
                            @{
                                var times = Model.gettimes(dateValue);
                            }
                            @for (int j = 0; j < times.Rows.Count; j++)
                            {
                                <button class="btn btn-outline-secondary time-slot-btn"
										data-toggle="modal"
                                        data-target="#bookTimeModal"
                                        onclick="setSelectedDateTime('@dateValue', '@times.Rows[j]["time"].ToString()')">
                                    @times.Rows[j]["time"].ToString()
                                </button>

                            }
        </td>
    </tr>

                }
        </tbody>
    </table>
        <!-- Replace the modal-triggering button with a link to the new page -->
        @if (HttpContext.Session.GetString("user_type") == "d")
        {
        <!-- Link to Add Appointments page -->
        <a class="btn btn-outline-primary w-100 mt-3" href="@Url.Page("AddAppointments")">
            + Add Time
        </a>
        }

</div>
    </div>
</div>


<form method="post" id="bookAppointmentForm">
    <input type="hidden" id="selectedDate" name="selectedDate" />
    <input type="hidden" id="selectedTime" name="selectedTime" />
</form>



<div class="modal fade" id="bookTimeModal" tabindex="-1" role="dialog" aria-labelledby="bookTimeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
				@if (HttpContext.Session.GetString("user_type") == "p")
                {
					<h5 class="modal-title" id="bookTimeModalLabel">Confirm Appointment</h5>
                }
                else
                {

					<h5 class="modal-title" id="bookTimeModalLabel">Cancel Appointment</h5>
                }
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="modalMessage">No date and time selected yet.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
				@if (HttpContext.Session.GetString("user_type") == "p")
				{
					<form method="post" asp-page-handler="BookAppointment">
						<input type="datetime-local" id="dateTimeINP" class="d-none" asp-for="appDateTime" value=0/>
						<button type="submit" class="btn btn-primary">Confirm Appointment</button>
					</form>
				}
                else
                {
                    <form method="post" asp-page-handler="CancelAppointment">
						<input type="datetime-local" id="dateTimeINP" class="d-none" asp-for="appDateTime" value=0/>
						<button type="submit" class="btn btn-primary">Cancel</button>
                    </form>
                }

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ppaModal" tabindex="-1" role="dialog" aria-labelledby="ppaModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ppaModalLabel">Change Price</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="modalMessage">Change your Price Per Appointment</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <form method="post" asp-page-handler="ChangePPA">
                    <input type="number" value=0 required asp-for="changedPPA"/>
					<button type="submit" class="btn btn-primary">Change</button>
                </form>
            </div>
        </div>
    </div>
</div>



<script>
    let selectedDate = null;
    let selectedTime = null;

    function setSelectedDateTime(date, time) {
        selectedDate = date; // Save the selected date
        selectedTime = time; // Save the selected time

		const [month, day, year] = date.split(" ")[0].split("/"); // Extract the date components
		const formattedDate = `${year}-${month.padStart(2, "0")}-${day.padStart(2, "0")}`;

        document.getElementById('modalMessage').textContent = `You selected: ${formattedDate} at ${time}`;

		console.log("Raw Date:", formattedDate); 
		console.log("Raw Time:", time);

        document.getElementById('dateTimeINP').value = `${formattedDate}T${time}`;
    }
</script>





<!-- Inline Styling -->
<style>
    /* Increased size of the available time buttons and borders */
    .time-slot-btn {
        background-color: #fff;
        border: 2px solid #ddd;
        padding: 15px 25px;  /* Increased padding */
        margin: 5px;
        border-radius: 10px;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
        transition: all 0.3s ease;
    }

    .time-slot-btn:hover {
        background-color: #00BFAE;
        color: white;
    }

    /* Add lines for "Add Dates" and "Add Available Time" */
    hr {
        border-top: 2px solid #ddd;
    }

    /* Adjustments for text color and positioning */
    .text-muted {
        color: #6c757d;
        font-weight: bold;
    }

    /* Custom styling for the buttons */
    .btn-outline-secondary {
        border-color: #ddd;
        color: #555;
        font-weight: normal;
    }

    .btn-outline-secondary:hover {
        background-color: #f8f9fa;
    }

    .btn-outline-primary {
        border-color: #00BFAE;
        color: #00BFAE;
    }

    .btn-outline-primary:hover {
        background-color: #00BFAE;
        color: white;
    }
</style>